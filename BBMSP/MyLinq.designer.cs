#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BBMSP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BBMS_DB")]
	public partial class MyLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBLOOD(TBLOOD instance);
    partial void UpdateTBLOOD(TBLOOD instance);
    partial void DeleteTBLOOD(TBLOOD instance);
    partial void InsertTDONOR(TDONOR instance);
    partial void UpdateTDONOR(TDONOR instance);
    partial void DeleteTDONOR(TDONOR instance);
    partial void InsertTPATIENT(TPATIENT instance);
    partial void UpdateTPATIENT(TPATIENT instance);
    partial void DeleteTPATIENT(TPATIENT instance);
    partial void InsertTDONATION(TDONATION instance);
    partial void UpdateTDONATION(TDONATION instance);
    partial void DeleteTDONATION(TDONATION instance);
    partial void InsertTINJECTION(TINJECTION instance);
    partial void UpdateTINJECTION(TINJECTION instance);
    partial void DeleteTINJECTION(TINJECTION instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertINFOS_USER(INFOS_USER instance);
    partial void UpdateINFOS_USER(INFOS_USER instance);
    partial void DeleteINFOS_USER(INFOS_USER instance);
    partial void InsertSERIAL_CODE(SERIAL_CODE instance);
    partial void UpdateSERIAL_CODE(SERIAL_CODE instance);
    partial void DeleteSERIAL_CODE(SERIAL_CODE instance);
    partial void InsertCITY(CITY instance);
    partial void UpdateCITY(CITY instance);
    partial void DeleteCITY(CITY instance);
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    #endregion
		
		public MyLinqDataContext() : 
				base(global::BBMSP.Properties.Settings.Default.BBMS_DBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBLOOD> TBLOODs
		{
			get
			{
				return this.GetTable<TBLOOD>();
			}
		}
		
		public System.Data.Linq.Table<TDONOR> TDONORs
		{
			get
			{
				return this.GetTable<TDONOR>();
			}
		}
		
		public System.Data.Linq.Table<TPATIENT> TPATIENTs
		{
			get
			{
				return this.GetTable<TPATIENT>();
			}
		}
		
		public System.Data.Linq.Table<TDONATION> TDONATIONs
		{
			get
			{
				return this.GetTable<TDONATION>();
			}
		}
		
		public System.Data.Linq.Table<TINJECTION> TINJECTIONs
		{
			get
			{
				return this.GetTable<TINJECTION>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<INFOS_USER> INFOS_USERs
		{
			get
			{
				return this.GetTable<INFOS_USER>();
			}
		}
		
		public System.Data.Linq.Table<SERIAL_CODE> SERIAL_CODEs
		{
			get
			{
				return this.GetTable<SERIAL_CODE>();
			}
		}
		
		public System.Data.Linq.Table<CITY> CITies
		{
			get
			{
				return this.GetTable<CITY>();
			}
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_D_B")]
		public ISingleResult<FILTER_D_BResult> FILTER_D_B([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<FILTER_D_BResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_P_B")]
		public ISingleResult<FILTER_P_BResult> FILTER_P_B([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<FILTER_P_BResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_PHONE")]
		public ISingleResult<FILTER_PHONEResult> FILTER_PHONE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<FILTER_PHONEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_Q_ASC")]
		public ISingleResult<FILTER_Q_ASCResult> FILTER_Q_ASC()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<FILTER_Q_ASCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_Q_DESC")]
		public ISingleResult<FILTER_Q_DESCResult> FILTER_Q_DESC()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<FILTER_Q_DESCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FILTER_Q_ID")]
		public ISingleResult<FILTER_Q_IDResult> FILTER_Q_ID()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<FILTER_Q_IDResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLOOD")]
	public partial class TBLOOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BLOODTYPE;
		
		private int _QUANTITY;
		
		private EntitySet<TDONOR> _TDONORs;
		
		private EntitySet<TPATIENT> _TPATIENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBLOODTYPEChanging(string value);
    partial void OnBLOODTYPEChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public TBLOOD()
		{
			this._TDONORs = new EntitySet<TDONOR>(new Action<TDONOR>(this.attach_TDONORs), new Action<TDONOR>(this.detach_TDONORs));
			this._TPATIENTs = new EntitySet<TPATIENT>(new Action<TPATIENT>(this.attach_TPATIENTs), new Action<TPATIENT>(this.detach_TPATIENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOODTYPE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string BLOODTYPE
		{
			get
			{
				return this._BLOODTYPE;
			}
			set
			{
				if ((this._BLOODTYPE != value))
				{
					this.OnBLOODTYPEChanging(value);
					this.SendPropertyChanging();
					this._BLOODTYPE = value;
					this.SendPropertyChanged("BLOODTYPE");
					this.OnBLOODTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLOOD_TDONOR", Storage="_TDONORs", ThisKey="ID", OtherKey="ID_BLOOD")]
		public EntitySet<TDONOR> TDONORs
		{
			get
			{
				return this._TDONORs;
			}
			set
			{
				this._TDONORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLOOD_TPATIENT", Storage="_TPATIENTs", ThisKey="ID", OtherKey="ID_BLOOD")]
		public EntitySet<TPATIENT> TPATIENTs
		{
			get
			{
				return this._TPATIENTs;
			}
			set
			{
				this._TPATIENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TDONORs(TDONOR entity)
		{
			this.SendPropertyChanging();
			entity.TBLOOD = this;
		}
		
		private void detach_TDONORs(TDONOR entity)
		{
			this.SendPropertyChanging();
			entity.TBLOOD = null;
		}
		
		private void attach_TPATIENTs(TPATIENT entity)
		{
			this.SendPropertyChanging();
			entity.TBLOOD = this;
		}
		
		private void detach_TPATIENTs(TPATIENT entity)
		{
			this.SendPropertyChanging();
			entity.TBLOOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDONOR")]
	public partial class TDONOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private int _ID_BLOOD;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _ALLERGIES;
		
		private EntitySet<TDONATION> _TDONATIONs;
		
		private EntityRef<TBLOOD> _TBLOOD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnID_BLOODChanging(int value);
    partial void OnID_BLOODChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnADRESSChanging(string value);
    partial void OnADRESSChanged();
    partial void OnALLERGIESChanging(string value);
    partial void OnALLERGIESChanged();
    #endregion
		
		public TDONOR()
		{
			this._TDONATIONs = new EntitySet<TDONATION>(new Action<TDONATION>(this.attach_TDONATIONs), new Action<TDONATION>(this.detach_TDONATIONs));
			this._TBLOOD = default(EntityRef<TBLOOD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BLOOD", DbType="Int NOT NULL")]
		public int ID_BLOOD
		{
			get
			{
				return this._ID_BLOOD;
			}
			set
			{
				if ((this._ID_BLOOD != value))
				{
					if (this._TBLOOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BLOODChanging(value);
					this.SendPropertyChanging();
					this._ID_BLOOD = value;
					this.SendPropertyChanged("ID_BLOOD");
					this.OnID_BLOODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this.OnADRESSChanging(value);
					this.SendPropertyChanging();
					this._ADRESS = value;
					this.SendPropertyChanged("ADRESS");
					this.OnADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLERGIES", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ALLERGIES
		{
			get
			{
				return this._ALLERGIES;
			}
			set
			{
				if ((this._ALLERGIES != value))
				{
					this.OnALLERGIESChanging(value);
					this.SendPropertyChanging();
					this._ALLERGIES = value;
					this.SendPropertyChanged("ALLERGIES");
					this.OnALLERGIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDONOR_TDONATION", Storage="_TDONATIONs", ThisKey="ID", OtherKey="ID_DONOR")]
		public EntitySet<TDONATION> TDONATIONs
		{
			get
			{
				return this._TDONATIONs;
			}
			set
			{
				this._TDONATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLOOD_TDONOR", Storage="_TBLOOD", ThisKey="ID_BLOOD", OtherKey="ID", IsForeignKey=true)]
		public TBLOOD TBLOOD
		{
			get
			{
				return this._TBLOOD.Entity;
			}
			set
			{
				TBLOOD previousValue = this._TBLOOD.Entity;
				if (((previousValue != value) 
							|| (this._TBLOOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLOOD.Entity = null;
						previousValue.TDONORs.Remove(this);
					}
					this._TBLOOD.Entity = value;
					if ((value != null))
					{
						value.TDONORs.Add(this);
						this._ID_BLOOD = value.ID;
					}
					else
					{
						this._ID_BLOOD = default(int);
					}
					this.SendPropertyChanged("TBLOOD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TDONATIONs(TDONATION entity)
		{
			this.SendPropertyChanging();
			entity.TDONOR = this;
		}
		
		private void detach_TDONATIONs(TDONATION entity)
		{
			this.SendPropertyChanging();
			entity.TDONOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TPATIENT")]
	public partial class TPATIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private int _ID_BLOOD;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _ALLERGIES;
		
		private EntitySet<TINJECTION> _TINJECTIONs;
		
		private EntityRef<TBLOOD> _TBLOOD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnID_BLOODChanging(int value);
    partial void OnID_BLOODChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnADRESSChanging(string value);
    partial void OnADRESSChanged();
    partial void OnALLERGIESChanging(string value);
    partial void OnALLERGIESChanged();
    #endregion
		
		public TPATIENT()
		{
			this._TINJECTIONs = new EntitySet<TINJECTION>(new Action<TINJECTION>(this.attach_TINJECTIONs), new Action<TINJECTION>(this.detach_TINJECTIONs));
			this._TBLOOD = default(EntityRef<TBLOOD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BLOOD", DbType="Int NOT NULL")]
		public int ID_BLOOD
		{
			get
			{
				return this._ID_BLOOD;
			}
			set
			{
				if ((this._ID_BLOOD != value))
				{
					if (this._TBLOOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_BLOODChanging(value);
					this.SendPropertyChanging();
					this._ID_BLOOD = value;
					this.SendPropertyChanged("ID_BLOOD");
					this.OnID_BLOODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this.OnADRESSChanging(value);
					this.SendPropertyChanging();
					this._ADRESS = value;
					this.SendPropertyChanged("ADRESS");
					this.OnADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLERGIES", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ALLERGIES
		{
			get
			{
				return this._ALLERGIES;
			}
			set
			{
				if ((this._ALLERGIES != value))
				{
					this.OnALLERGIESChanging(value);
					this.SendPropertyChanging();
					this._ALLERGIES = value;
					this.SendPropertyChanged("ALLERGIES");
					this.OnALLERGIESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPATIENT_TINJECTION", Storage="_TINJECTIONs", ThisKey="ID", OtherKey="ID_PATIENT")]
		public EntitySet<TINJECTION> TINJECTIONs
		{
			get
			{
				return this._TINJECTIONs;
			}
			set
			{
				this._TINJECTIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLOOD_TPATIENT", Storage="_TBLOOD", ThisKey="ID_BLOOD", OtherKey="ID", IsForeignKey=true)]
		public TBLOOD TBLOOD
		{
			get
			{
				return this._TBLOOD.Entity;
			}
			set
			{
				TBLOOD previousValue = this._TBLOOD.Entity;
				if (((previousValue != value) 
							|| (this._TBLOOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLOOD.Entity = null;
						previousValue.TPATIENTs.Remove(this);
					}
					this._TBLOOD.Entity = value;
					if ((value != null))
					{
						value.TPATIENTs.Add(this);
						this._ID_BLOOD = value.ID;
					}
					else
					{
						this._ID_BLOOD = default(int);
					}
					this.SendPropertyChanged("TBLOOD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TINJECTIONs(TINJECTION entity)
		{
			this.SendPropertyChanging();
			entity.TPATIENT = this;
		}
		
		private void detach_TINJECTIONs(TINJECTION entity)
		{
			this.SendPropertyChanging();
			entity.TPATIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDONATION")]
	public partial class TDONATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_DONOR;
		
		private string _CIN_DONOR;
		
		private string _OPERATION_DATE;
		
		private int _QUANTITY_DONATED;
		
		private EntityRef<TDONOR> _TDONOR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_DONORChanging(int value);
    partial void OnID_DONORChanged();
    partial void OnCIN_DONORChanging(string value);
    partial void OnCIN_DONORChanged();
    partial void OnOPERATION_DATEChanging(string value);
    partial void OnOPERATION_DATEChanged();
    partial void OnQUANTITY_DONATEDChanging(int value);
    partial void OnQUANTITY_DONATEDChanged();
    #endregion
		
		public TDONATION()
		{
			this._TDONOR = default(EntityRef<TDONOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DONOR", DbType="Int NOT NULL")]
		public int ID_DONOR
		{
			get
			{
				return this._ID_DONOR;
			}
			set
			{
				if ((this._ID_DONOR != value))
				{
					if (this._TDONOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DONORChanging(value);
					this.SendPropertyChanging();
					this._ID_DONOR = value;
					this.SendPropertyChanged("ID_DONOR");
					this.OnID_DONORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN_DONOR", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN_DONOR
		{
			get
			{
				return this._CIN_DONOR;
			}
			set
			{
				if ((this._CIN_DONOR != value))
				{
					this.OnCIN_DONORChanging(value);
					this.SendPropertyChanging();
					this._CIN_DONOR = value;
					this.SendPropertyChanged("CIN_DONOR");
					this.OnCIN_DONORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATION_DATE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OPERATION_DATE
		{
			get
			{
				return this._OPERATION_DATE;
			}
			set
			{
				if ((this._OPERATION_DATE != value))
				{
					this.OnOPERATION_DATEChanging(value);
					this.SendPropertyChanging();
					this._OPERATION_DATE = value;
					this.SendPropertyChanged("OPERATION_DATE");
					this.OnOPERATION_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_DONATED", DbType="Int NOT NULL")]
		public int QUANTITY_DONATED
		{
			get
			{
				return this._QUANTITY_DONATED;
			}
			set
			{
				if ((this._QUANTITY_DONATED != value))
				{
					this.OnQUANTITY_DONATEDChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_DONATED = value;
					this.SendPropertyChanged("QUANTITY_DONATED");
					this.OnQUANTITY_DONATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDONOR_TDONATION", Storage="_TDONOR", ThisKey="ID_DONOR", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TDONOR TDONOR
		{
			get
			{
				return this._TDONOR.Entity;
			}
			set
			{
				TDONOR previousValue = this._TDONOR.Entity;
				if (((previousValue != value) 
							|| (this._TDONOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TDONOR.Entity = null;
						previousValue.TDONATIONs.Remove(this);
					}
					this._TDONOR.Entity = value;
					if ((value != null))
					{
						value.TDONATIONs.Add(this);
						this._ID_DONOR = value.ID;
					}
					else
					{
						this._ID_DONOR = default(int);
					}
					this.SendPropertyChanged("TDONOR");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINJECTION")]
	public partial class TINJECTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_PATIENT;
		
		private string _CIN_PATIENT;
		
		private string _OPERATION_DATE;
		
		private int _QUANTITY_INJECTED;
		
		private EntityRef<TPATIENT> _TPATIENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_PATIENTChanging(int value);
    partial void OnID_PATIENTChanged();
    partial void OnCIN_PATIENTChanging(string value);
    partial void OnCIN_PATIENTChanged();
    partial void OnOPERATION_DATEChanging(string value);
    partial void OnOPERATION_DATEChanged();
    partial void OnQUANTITY_INJECTEDChanging(int value);
    partial void OnQUANTITY_INJECTEDChanged();
    #endregion
		
		public TINJECTION()
		{
			this._TPATIENT = default(EntityRef<TPATIENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PATIENT", DbType="Int NOT NULL")]
		public int ID_PATIENT
		{
			get
			{
				return this._ID_PATIENT;
			}
			set
			{
				if ((this._ID_PATIENT != value))
				{
					if (this._TPATIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PATIENTChanging(value);
					this.SendPropertyChanging();
					this._ID_PATIENT = value;
					this.SendPropertyChanged("ID_PATIENT");
					this.OnID_PATIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN_PATIENT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN_PATIENT
		{
			get
			{
				return this._CIN_PATIENT;
			}
			set
			{
				if ((this._CIN_PATIENT != value))
				{
					this.OnCIN_PATIENTChanging(value);
					this.SendPropertyChanging();
					this._CIN_PATIENT = value;
					this.SendPropertyChanged("CIN_PATIENT");
					this.OnCIN_PATIENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERATION_DATE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OPERATION_DATE
		{
			get
			{
				return this._OPERATION_DATE;
			}
			set
			{
				if ((this._OPERATION_DATE != value))
				{
					this.OnOPERATION_DATEChanging(value);
					this.SendPropertyChanging();
					this._OPERATION_DATE = value;
					this.SendPropertyChanged("OPERATION_DATE");
					this.OnOPERATION_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_INJECTED", DbType="Int NOT NULL")]
		public int QUANTITY_INJECTED
		{
			get
			{
				return this._QUANTITY_INJECTED;
			}
			set
			{
				if ((this._QUANTITY_INJECTED != value))
				{
					this.OnQUANTITY_INJECTEDChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_INJECTED = value;
					this.SendPropertyChanged("QUANTITY_INJECTED");
					this.OnQUANTITY_INJECTEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPATIENT_TINJECTION", Storage="_TPATIENT", ThisKey="ID_PATIENT", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TPATIENT TPATIENT
		{
			get
			{
				return this._TPATIENT.Entity;
			}
			set
			{
				TPATIENT previousValue = this._TPATIENT.Entity;
				if (((previousValue != value) 
							|| (this._TPATIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TPATIENT.Entity = null;
						previousValue.TINJECTIONs.Remove(this);
					}
					this._TPATIENT.Entity = value;
					if ((value != null))
					{
						value.TINJECTIONs.Add(this);
						this._ID_PATIENT = value.ID;
					}
					else
					{
						this._ID_PATIENT = default(int);
					}
					this.SendPropertyChanged("TPATIENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _PASSWORD;
		
		private EntitySet<INFOS_USER> _INFOS_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnADRESSChanging(string value);
    partial void OnADRESSChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
		
		public USER()
		{
			this._INFOS_USERs = new EntitySet<INFOS_USER>(new Action<INFOS_USER>(this.attach_INFOS_USERs), new Action<INFOS_USER>(this.detach_INFOS_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this.OnADRESSChanging(value);
					this.SendPropertyChanging();
					this._ADRESS = value;
					this.SendPropertyChanged("ADRESS");
					this.OnADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INFOS_USER", Storage="_INFOS_USERs", ThisKey="ID", OtherKey="ID_USER")]
		public EntitySet<INFOS_USER> INFOS_USERs
		{
			get
			{
				return this._INFOS_USERs;
			}
			set
			{
				this._INFOS_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INFOS_USERs(INFOS_USER entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_INFOS_USERs(INFOS_USER entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INFOS_USERS")]
	public partial class INFOS_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_USER;
		
		private string _CIN_USER;
		
		private string _LOGIN_TIME;
		
		private string _LOGOUT_TIME;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_USERChanging(int value);
    partial void OnID_USERChanged();
    partial void OnCIN_USERChanging(string value);
    partial void OnCIN_USERChanged();
    partial void OnLOGIN_TIMEChanging(string value);
    partial void OnLOGIN_TIMEChanged();
    partial void OnLOGOUT_TIMEChanging(string value);
    partial void OnLOGOUT_TIMEChanged();
    #endregion
		
		public INFOS_USER()
		{
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="Int NOT NULL")]
		public int ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN_USER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN_USER
		{
			get
			{
				return this._CIN_USER;
			}
			set
			{
				if ((this._CIN_USER != value))
				{
					this.OnCIN_USERChanging(value);
					this.SendPropertyChanging();
					this._CIN_USER = value;
					this.SendPropertyChanged("CIN_USER");
					this.OnCIN_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGIN_TIME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LOGIN_TIME
		{
			get
			{
				return this._LOGIN_TIME;
			}
			set
			{
				if ((this._LOGIN_TIME != value))
				{
					this.OnLOGIN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._LOGIN_TIME = value;
					this.SendPropertyChanged("LOGIN_TIME");
					this.OnLOGIN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGOUT_TIME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LOGOUT_TIME
		{
			get
			{
				return this._LOGOUT_TIME;
			}
			set
			{
				if ((this._LOGOUT_TIME != value))
				{
					this.OnLOGOUT_TIMEChanging(value);
					this.SendPropertyChanging();
					this._LOGOUT_TIME = value;
					this.SendPropertyChanged("LOGOUT_TIME");
					this.OnLOGOUT_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_INFOS_USER", Storage="_USER", ThisKey="ID_USER", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.INFOS_USERs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.INFOS_USERs.Add(this);
						this._ID_USER = value.ID;
					}
					else
					{
						this._ID_USER = default(int);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERIAL_CODE")]
	public partial class SERIAL_CODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SERIAL_NUMBER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSERIAL_NUMBERChanging(string value);
    partial void OnSERIAL_NUMBERChanged();
    #endregion
		
		public SERIAL_CODE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIAL_NUMBER", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string SERIAL_NUMBER
		{
			get
			{
				return this._SERIAL_NUMBER;
			}
			set
			{
				if ((this._SERIAL_NUMBER != value))
				{
					this.OnSERIAL_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._SERIAL_NUMBER = value;
					this.SendPropertyChanged("SERIAL_NUMBER");
					this.OnSERIAL_NUMBERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CITY")]
	public partial class CITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CITY_NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCITY_NAMEChanging(string value);
    partial void OnCITY_NAMEChanged();
    #endregion
		
		public CITY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY_NAME", DbType="VarChar(50)")]
		public string CITY_NAME
		{
			get
			{
				return this._CITY_NAME;
			}
			set
			{
				if ((this._CITY_NAME != value))
				{
					this.OnCITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CITY_NAME = value;
					this.SendPropertyChanged("CITY_NAME");
					this.OnCITY_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMINS")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _PASSWORD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFULLNAMEChanging(string value);
    partial void OnFULLNAMEChanged();
    partial void OnCINChanging(string value);
    partial void OnCINChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnADRESSChanging(string value);
    partial void OnADRESSChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this.OnFULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._FULLNAME = value;
					this.SendPropertyChanged("FULLNAME");
					this.OnFULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this.OnGENDERChanging(value);
					this.SendPropertyChanging();
					this._GENDER = value;
					this.SendPropertyChanged("GENDER");
					this.OnGENDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this.OnADRESSChanging(value);
					this.SendPropertyChanging();
					this._ADRESS = value;
					this.SendPropertyChanged("ADRESS");
					this.OnADRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class FILTER_D_BResult
	{
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private int _ID_BLOOD;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _ALLERGIES;
		
		public FILTER_D_BResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this._FULLNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this._CIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this._PHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this._EMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this._GENDER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BLOOD", DbType="Int NOT NULL")]
		public int ID_BLOOD
		{
			get
			{
				return this._ID_BLOOD;
			}
			set
			{
				if ((this._ID_BLOOD != value))
				{
					this._ID_BLOOD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this._CITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this._ADRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLERGIES", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ALLERGIES
		{
			get
			{
				return this._ALLERGIES;
			}
			set
			{
				if ((this._ALLERGIES != value))
				{
					this._ALLERGIES = value;
				}
			}
		}
	}
	
	public partial class FILTER_P_BResult
	{
		
		private int _ID;
		
		private string _FULLNAME;
		
		private string _CIN;
		
		private string _PHONE;
		
		private string _EMAIL;
		
		private string _DOB;
		
		private string _GENDER;
		
		private int _ID_BLOOD;
		
		private string _CITY;
		
		private string _ADRESS;
		
		private string _ALLERGIES;
		
		public FILTER_P_BResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FULLNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FULLNAME
		{
			get
			{
				return this._FULLNAME;
			}
			set
			{
				if ((this._FULLNAME != value))
				{
					this._FULLNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this._CIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this._PHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this._EMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string GENDER
		{
			get
			{
				return this._GENDER;
			}
			set
			{
				if ((this._GENDER != value))
				{
					this._GENDER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_BLOOD", DbType="Int NOT NULL")]
		public int ID_BLOOD
		{
			get
			{
				return this._ID_BLOOD;
			}
			set
			{
				if ((this._ID_BLOOD != value))
				{
					this._ID_BLOOD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this._CITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESS", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ADRESS
		{
			get
			{
				return this._ADRESS;
			}
			set
			{
				if ((this._ADRESS != value))
				{
					this._ADRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLERGIES", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ALLERGIES
		{
			get
			{
				return this._ALLERGIES;
			}
			set
			{
				if ((this._ALLERGIES != value))
				{
					this._ALLERGIES = value;
				}
			}
		}
	}
	
	public partial class FILTER_PHONEResult
	{
		
		private string _PHONE;
		
		public FILTER_PHONEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this._PHONE = value;
				}
			}
		}
	}
	
	public partial class FILTER_Q_ASCResult
	{
		
		private int _ID;
		
		private string _BLOODTYPE;
		
		private int _QUANTITY;
		
		public FILTER_Q_ASCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOODTYPE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string BLOODTYPE
		{
			get
			{
				return this._BLOODTYPE;
			}
			set
			{
				if ((this._BLOODTYPE != value))
				{
					this._BLOODTYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this._QUANTITY = value;
				}
			}
		}
	}
	
	public partial class FILTER_Q_DESCResult
	{
		
		private int _ID;
		
		private string _BLOODTYPE;
		
		private int _QUANTITY;
		
		public FILTER_Q_DESCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOODTYPE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string BLOODTYPE
		{
			get
			{
				return this._BLOODTYPE;
			}
			set
			{
				if ((this._BLOODTYPE != value))
				{
					this._BLOODTYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this._QUANTITY = value;
				}
			}
		}
	}
	
	public partial class FILTER_Q_IDResult
	{
		
		private int _ID;
		
		private string _BLOODTYPE;
		
		private int _QUANTITY;
		
		public FILTER_Q_IDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOODTYPE", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string BLOODTYPE
		{
			get
			{
				return this._BLOODTYPE;
			}
			set
			{
				if ((this._BLOODTYPE != value))
				{
					this._BLOODTYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this._QUANTITY = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
